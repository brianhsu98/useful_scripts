#!/bin/bash

# Interception to make sapling work with usual Databricks shell scripts and bazel status command. Terrible!!
if /opt/homebrew/bin/git.original rev-parse --git-dir > /dev/null 2>&1; then
  /opt/homebrew/bin/git.original "$@"
else
        if [ $# -eq 2 ] && [ $1 == "rev-parse" ] && [ $2 == "--show-toplevel" ];
          then sl root
        elif [ $# -eq 2 ] && [ $1 == "rev-parse" ] && [ $2 == "HEAD" ]; 
          then sl id -i
        elif [ $# -eq 3 ] && [ $1 == "rev-parse" ] && [ $2 == "--short=7" ] && [ $3 == "HEAD" ]; 
          then sl id -i
        elif [ $# -eq 3 ] && [ $1 == "rev-parse" ] && [ $2 == "--abbrev-ref" ] && [ $3 == "HEAD" ]; 
          then sl bookmark
        elif [ $# -eq 4 ] && [ $1 == "diff-index" ] && [ $2 == "--quiet" ] && [ $3 == "HEAD" ] && [ $4 == "--" ];
          then exit 0
        elif [ $# -eq 2 ] && [ $1 == "config" ] && [ $2 == "user.email" ];
          then echo "brian.hsu@databricks.com"
        elif [ $# -eq 2 ] && [ $1 == "remote" ] && ( [ $2 == "-v" ] || [ $2 == "--verbose" ] );
                # Hardcode to fix devbox lmao
          then 
echo "databricks        git@github.com:databricks/universe.git (fetch)
databricks      git@github.com:databricks/universe.git (push)
origin  git@github.com:brianhsu98/universe.git (fetch)
origin  git@github.com:brianhsu98/universe.git (push)"
        elif [ $# -eq 1 ] && [ $1 == "version" ];
          then echo "git version 2.39.2"
        elif [ $# -eq 3 ] && [ $1 == "rev-parse" ] && [ $2 == "--git-dir" ] && [ $3 == "--git-common-dir" ]; 
          then 
                  echo "/Users/brian.hsu/universe/.sl"
                  echo "../../.sl"
        elif [ $# -eq 4 ] && [ $1 == "config" ] && [ $2 == "-z" ] && [ $3 == "--get-regexp" ] && [ $4 == "^alias." ];
        then
                echo 
                exit 0
        elif [ $# -eq 3 ] && [ $1 == "show" ] && [ $2 == "--textconv" ]; 
        then 
             cat /Users/brian.hsu/universe/{$3:1}
        elif [ $# -eq 3 ] && [ $1 == "rev-list" ] && [ $2 == "--max-count=1" ] && [ $3 == "HEAD" ]; then
                sl log -r . --template '{node}\n'
        elif [ $# -eq 4 ] && [ $1 == "log" ] && [ $2 == "-1" ] ; then
                sl log -r "." -T "{date}\n" | awk '{printf "%.0f\n", $1}'
        elif [ $# -eq 3 ] && [ $1 == "remote" ] && [ $2 == "get-url" ] && [ $3 == "origin" ]; then
                echo "Sapling : Hack for kubecfg"
                exit 0
        elif [ $# -eq 2 ] && [ $1 == "diff" ] && [ $2 == "HEAD" ] ; then
                sl diff -r .
        elif [ $# -eq 2 ] && [ $1 == "status" ] && [ $2 == "--porcelain" ] ; then
               sl status 
                # sl status --color always --modified --added --deleted --unknown --ignored
        elif [ $# -eq 2 ] && [ $1 == "rev-parse" ] && [ $2 == "--git-dir" ] ; then
                sl root
        else
          #echo "Fallthrough " $# $@
          # echo $# $@ > /tmp/git_output
          /opt/homebrew/bin/git.original "$@"
          # /opt/homebrew/bin/git.original --git-dir '/Users/brian.hsu/universe/.sl/store/git' $@
        fi
fi 

